[tox]
minversion = 4.11
envlist = py39, py310, py311
skip_missing_interpreters = True

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311

[testenv]
package = editable
setenv =
    TOXINIDIR = {toxinidir}
    VIRTUALENV_PIP = 23.3.2

[testenv:py{39,310,311}]
description =
    Run automated tests.
extras =
    testing
commands =
    python --version
    python -m pip --version
    python -m black --check src tests
    python -m isort --check-only src tests
    python -m pytest --verbose --doctest-modules --pylint src
    python -m mypy -p iqm.cortex_cli
    python -m pytest --verbose --pylint-rcfile=tests/.pylintrc --pylint --cov iqm.cortex_cli --cov-report=term-missing --junitxml=test_report.xml tests
    python -m mypy tests

[testenv:format]
description =
    Format the codebase.
skip_install = True
changedir = {toxinidir}
deps =
    black ~= 23.12
commands =
    black src tests

[testenv:docs]
description =
    Invoke sphinx-multiversion to build the docs.
setenv =
    DOCSDIR = {toxinidir}/docs
    BUILDDIR = {toxinidir}/build/sphinx
    BUILD = html
extras =
    docs
allowlist_externals =
    sphinx-multiversion
commands =
    sphinx-multiversion "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" -W --dev-name dev

[testenv:clean]
description =
    Delete all build artifacts.
skip_install = True
changedir = {toxinidir}
# We cannot simply use rm because the command has to exist in the testenv.
commands =
    python -c 'from shutil import rmtree; rmtree("build", True); rmtree("dist", True); rmtree("docs/api", True)'

[testenv:build]
description =
    Build the package.
skip_install = True
changedir = {toxinidir}
deps =
    build[virtualenv] == 1.0.3
commands =
    python -m build
